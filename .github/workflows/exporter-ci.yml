name: Golang Exporter CI
on:
  push:
    paths:
      - 'app_exporter/**'
      - '.github/workflows/exporter-ci.yml'

jobs:
  golangci_lint:
    name: golangci_lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.39.0
          working-directory: ./app_exporter

  docker_build:
    needs: golangci_lint
    runs-on: ubuntu-20.04
    name: Docker Build

    defaults:
      run:
        working-directory: './app_exporter/'
    env:
      BUILD_PLATFORMS: linux/amd64
    steps:
      - name: Project checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=and1er/pja-exporter
          VERSION=ci

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ env.BUILD_PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-exporter-${{ github.sha }}
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app_exporter
          file: ./app_exporter/Dockerfile
          platforms: ${{ env.BUILD_PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
