name: Release Publication

on:
  push:
    tags:
      # Only trigger on semver shaped tags.
      - "v*.*.*"
  # TODO: remove manual trigger
  workflow_dispatch:

jobs:
  docker_build_and_push:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        app_id: [api, exporter]
    env:
      BUILD_PLATFORMS: linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64
    steps:
      - name: Checkout ${{ matrix.app_id }}
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=and1er/pja-${{ matrix.app_id }}
          VERSION=edge
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          fi
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            TAGS="$TAGS,${DOCKER_IMAGE}:latest"
          fi
          echo ::set-output name=tags::${TAGS}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ BUILD_PLATFORMS }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      # - name: Cache Docker layers
      #   uses: actions/cache@v2
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ matrix.app_id }}-${{ github.sha }}
      #     # restore-keys: |
      #     #   ${{ runner.os }}-buildx-

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./app_${{ matrix.app_id }}
          file: ./app_${{ matrix.app_id }}/Dockerfile
          platforms: ${{ BUILD_PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep.outputs.tags }}
          no-cache: true
          # cache-from: type=local,src=/tmp/.buildx-cache
          # cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  terraform_deploy:
    # https://github.com/hashicorp/setup-terraform
    name: Terrform Deploy
    runs-on: ubuntu-20.04
    needs:
      - docker_build_and_push

    env:
      TERRAFORM_VERSION: 0.15.0
    defaults:
      run:
        working-directory: './infrastructure/terraform-aws/'

    steps:
      - name: Project Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform v${{ env.TERRAFORM_VERSION }}
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check -diff

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve
